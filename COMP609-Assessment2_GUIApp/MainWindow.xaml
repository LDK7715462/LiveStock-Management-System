<Window x:Class="COMP609_Assessment2_GUIApp.MainWindow"
        xmlns:ctls="clr-namespace:COMP609_Assessment2_GUIApp.Controls"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:COMP609_Assessment2_GUIApp"
        mc:Ignorable="d" Name="home"
        Title="MainWindow" Height="650" Width="1000"
        WindowStartupLocation="CenterScreen" WindowStyle="None"
        Background="Transparent" AllowsTransparency="True"
        ResizeMode="NoResize" FontFamily="Poppins">

    <Border Background="{DynamicResource PrimaryBackgroundColour}"
            CornerRadius="8"
            BorderThickness="1.5"
            BorderBrush="{DynamicResource MainBorderColour}"
            MouseDown="Grid_MouseDown">

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0"
                    Background="{DynamicResource SecondaryBackgroundColour}"
                    CornerRadius="8 0 0 8">
                <Grid x:Name="GridNav" Width="60">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Border 
                              Margin="14 0 0 0"
                              Width="32" Height="24"
                              HorizontalAlignment="Left">
                        </Border>

                        <Label Content="LMS  Live Stock System"
                               Foreground="{DynamicResource PrimaryTextColour}"
                               FontWeight="Bold"
                               FontSize="16"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Margin="10 0 0 0"/>
                    </Grid>

                    <!-- Start: MenuItem -->
                    <StackPanel Grid.Row="1" 
                                Orientation="Vertical"
                                Margin="0 40 0 0">
                        <Button x:Name="btnHome" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnHome_MouseEnter" MouseLeave="btnHome_MouseLeave" Click="btnHome_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource ButtonPopoutColour}" Icon="{DynamicResource home}" 
                                           IconWidth="16" Text="Home" VerticalAlignment="Center"/>
                        </Button>
                        <Separator Height="4" Width="35" Background="{DynamicResource SeparatorColour}" Opacity="0.5" />
                        <Button x:Name="btnQueryData" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnQueryData_MouseEnter" MouseLeave="btnQueryData_MouseLeave" Click="btnQuery_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource ButtonPopoutColour}" Icon="{DynamicResource statistics}" 
                                           IconWidth="16" Text="Query Data" VerticalAlignment="Center"/>
                        </Button>
                        <Separator Height="4" Width="35" Background="{DynamicResource SeparatorColour}" Opacity="0.5" />
                        <Button x:Name="btnStatistics" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnStatistics_MouseEnter" MouseLeave="btnStatistics_MouseLeave" Click="btnStats_Click" >
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource ButtonPopoutColour}" Icon="{DynamicResource querydata}" 
                                           IconWidth="16" Text="Analytics" VerticalAlignment="Center"/>
                        </Button>
                        <Separator Height="4" Width="35" Background="{DynamicResource SeparatorColour}" Opacity="0.5" />
                        <Button x:Name="btnUpdateData" Style="{DynamicResource PopupButtonStyle}"  MouseEnter="btnUpdateData_MouseEnter" MouseLeave="btnUpdateData_MouseLeave" Click="btnUpdate_Click">
                            <ctls:MenuItem GroupName="MenuItem" IndicatorBrush="{DynamicResource ButtonPopoutColour}" Icon="{DynamicResource updatedata}" 
                                           IconWidth="16" Text="Update Data" VerticalAlignment="Center"/>
                        </Button>
                        <!-- End: MenuItem -->
                    </StackPanel>

                    <!-- Start: Theme Toggle LIGHT/DARK -->
                    <StackPanel Grid.Row="3">
                        <Separator Height="4" Width="35" Background="{DynamicResource SeparatorColour}" Opacity="0.5" />
                        <TextBlock x:Name="ToggleButtonLabel" Foreground="{DynamicResource ThemeTextColour}" VerticalAlignment="Center" Margin="10,10,0,0"/>
                        <ToggleButton x:Name="ThemeToggleButton" HorizontalAlignment="Left" Width="40" Margin="10,0,0,0"
                                                      IsChecked="True"
                                                      Checked="ThemeToggleButton_Checked" 
                                                      Unchecked="ThemeToggleButton_Unchecked"/>
                    </StackPanel>
                    <!-- End: Theme Toggle LIGHT/DARK -->

                    <!-- Start: Popup User Control -->
                    <Popup x:Name="Popup"  AllowsTransparency="True"  HorizontalOffset="0" VerticalOffset="10">
                        <ctls:UserPopup x:Name="Header" Foreground="{DynamicResource PrimaryTextColour}"/>
                    </Popup>
                    <!-- End: Popup User Control -->
                </Grid>
            </Border>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <ToggleButton x:Name="Tg_Btn" Grid.Column="1" VerticalAlignment="Center" Style="{DynamicResource iToggleButtonStyle}" HorizontalAlignment="Left" BorderThickness="0" Background="Transparent" Margin="10,15,0,15" Height="30" Width="30" Checked="Tg_Btn_Checked">
                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard>
                                <Storyboard x:Name="HideStackPanel">
                                    <DoubleAnimation Storyboard.TargetName="GridNav" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="210" To="60" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard>
                                <Storyboard x:Name="ShowStackPanel">
                                    <DoubleAnimation Storyboard.TargetName="GridNav" Storyboard.TargetProperty="Width" BeginTime="0:0:0" From="60" To="210" Duration="0:0:0.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>
                </ToggleButton>

                <!-- Start: Button Close | Minimize -->
                <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,5,10,0" Height="30" Orientation="Horizontal" FlowDirection="RightToLeft" Grid.RowSpan="2">
                    <Button x:Name="btnClose" Style="{StaticResource IconButtonsStyle}" Content="{DynamicResource close}" Click="btnClose_Click" Tag="IsCloseButton"/>
                    <Button x:Name="btnMinimize" Style="{DynamicResource IconButtonsStyle}" Content="{DynamicResource minimize}" Click="btnMinimize_Click"/>
                </StackPanel>
                <!-- End: Button Close | Minimize -->

                <!-- Start: Background Image Container -->
                <Grid Grid.Row="1" MaxHeight="500" VerticalAlignment="Top" Height="264">
                    <Grid.Background>
                        <ImageBrush ImageSource="{DynamicResource background}"
                                    Stretch="UniformToFill"
                                    />
                    </Grid.Background>
                </Grid>
                <!-- End: Background Image Container -->

                <!-- Start: Content Container -->
                <Frame Grid.Row="1"
                       x:Name="fContainer"
                       Margin="20"
                       NavigationUIVisibility="Hidden"
                       />
                <!-- End: Content Container -->
            </Grid>
        </Grid>
    </Border>
</Window>
